
var rpsApp = angular.module('rpsApp', ['ngRoute', 'rpsSpark', 'ngAnimate', 'rpsPlayer']);

rpsApp.config(['$routeProvider', function ($routeProvider) {
  $routeProvider
    .when('', {
    	controller: 'rpsController',
    	templateUrl: 'RPSChallenge/view/home.html'
    })
  	.otherwise({
    	controller: 'rpsController',
  		templateUrl: 'RPSChallenge/view/home.html'
  	});
}]);

rpsApp.controller('rpsController', ['$scope', '$interval', '$timeout', 'sparkService', 'playerService',
    function($scope, $interval, $timeout, sparkService, playerService) {
	
		//total time (in ms) for rock,paper,scissors,shoot
		$scope.$root.totalShootTime = 2000;
		//time (in ms) to wait before transitioning between screens
		$scope.$root.screenTransitionTime = 2500;
		//maximum number of rounds to play
		$scope.$root.maxRounds = 5;
		
		$scope.$root.roundsToWin = Math.ceil($scope.$root.maxRounds / 2);
		$scope.$root.moves = ['rock', 'paper', 'scissors'];
		
		$scope.gameState = "";
		$scope.$root.gameOver = false;
	
		var newRound = function(round) {
			$scope.$root.round = {
				gameid: $scope.$root.game.id,
				round: round || 1,
				plays: {
					human: "",
					spark: ""
				},
				winner: ""
			}
		};
	
		var newGame = function(player) {
			$scope.$root.gameOver = false;
			$scope.$root.game = {
				id: uuid.v4(),
				rounds: [],
				wins: {
					human: 0,
					spark: 0
				},
				winner: "",
				player: player
			}
			newRound(1);
		};
		
		$scope.$root.roundsToWinArray = function() {
			var arr = new Array();
			var index = 1;
			while (index <= $scope.$root.roundsToWin) {
				arr.push(index++);
			}
			return arr;
		}
		
	    $scope.$root.transitionToState = function(state) {
	    	$scope.gameState = state;
	    	var nextState = null;
	    	
	    	switch(state) {
	    		case 'newround':
	    			nextState = "rpscountdown";
	    			break;
	    		case 'makeamove':
	    			$scope.$root.showWinner = false;
	    			break;
	    		case 'play':
	        		$timeout(function () {
		    			$scope.$root.showWinner = true;
		        		$timeout(function () {
			    			if ($scope.$root.gameOver) {
			    				$scope.$root.transitionToState('gamewinner');
			    			}
			    			else {
			    				$scope.$root.playAnotherRound();
			    			}
			    			
			    		}, ($scope.$root.screenTransitionTime));
		        		
		    		}, ($scope.$root.screenTransitionTime / 1.5));
	    			break;
	    		case 'gamewinner':
	    			nextState = ""; //restart
    				break;
	    		default:
	    			break;
	    	}
	    	
	    	if (nextState != null) {
	    		$timeout(function () {
	    			$scope.$root.transitionToState(nextState);
	    		}, $scope.$root.screenTransitionTime);
	    	}
	    };
	    
	    $scope.showPlayerForm = function(show) {
	    	if (show) {
	    		$('#registerPlayer').modal('show');
	    	}
	    	else {
	    		$('#registerPlayer').modal('hide');
	    		$scope.player = {};
	    	}
	    }
	
		$scope.playerNameCheck = function(player) {
			var playerid = player ? (player._id || player) : null;
			if (playerid && playerid != "") {
				if ($scope.namecheckTimer) {
					clearTimeout($scope.namecheckTimer);
				}
				$scope.namecheckTimer = setTimeout(function() {
					var scope = $scope;
					playerid = playerid.toLowerCase();
					playerService.getPlayer(playerid)
						.then(
							function(response) {
								console.log(response);
								if (playerid === response._id) {
									scope.player = response;
								}
								else {
									scope.player = {"_id":playerid, "firstName":"", "lastName":""};
								}
							},
							function(err) {
								console.error(err);
							}
						);
				}, 1000);
			}
		};
		
		$scope.submitPlayer = function(player) {
			if (player) {
				playerService.savePlayer(player)
					.then(
						function(response) {
							$scope.startNewGame(player);
						},
						function(err) {
							console.error(err);
						}
					);
			}
			else {
				$scope.startNewGame();
			}
		
		}
		
		$scope.startNewGame = function(player) {
			newGame(player ? (player._id || player) : null);
			$scope.showPlayerForm(false);
			$scope.$root.transitionToState("newround");
		};
		
		$scope.playMove = function(move) {
			$scope.$root.round.plays.human = move;
			$scope.$root.computeWinner();
		};
		
		$scope.$root.playAnotherRound = function() {
			newRound($scope.$root.round.round + 1);
			$scope.$root.transitionToState("newround");
		};
    	
    	$scope.$root.shoot = function() {
			$scope.$root.transitionToState('makeamove');
			sparkService.getSparkPlay($scope.$root.game.player)
				.then(
					function(response) {
						$scope.$root.round.plays.spark = response.toLowerCase();
						$scope.$root.computeWinner();
					},
					function(err) {
						console.error(err);
					}
				);
    	};


    	$scope.$root.computeWinner = function() {
    		if ($scope.$root.round.plays.spark && $scope.$root.round.plays.human) {
				var sparkValue = $scope.$root.moves.indexOf($scope.$root.round.plays.spark);
				var humanValue = $scope.$root.moves.indexOf($scope.$root.round.plays.human);
				var winner = null;
	
				if (sparkValue !== humanValue) {
					if (humanValue > sparkValue) {
						winner = humanValue == sparkValue + 1 ? "human" : "spark";
					}
					else {
						winner = sparkValue == humanValue + 1 ? "spark" : "human";
					}
				}
	
	    		$scope.$root.round.winner = winner ? winner : "";
	    		$scope.$root.game.rounds.push($scope.$root.round);
	    		
	    		if (winner) {
		    		$scope.$root.game.wins[winner]++;
		
					if ($scope.$root.game.wins[winner] == $scope.$root.roundsToWin) {
						$scope.$root.gameOver = true;
						$scope.$root.game.winner = winner;
					}
	    		}
				
	    		$scope.$root.sendPlay();
	    		$scope.$root.transitionToState("play");
    		}
    	};
    	
    	$scope.$root.sendPlay = function() {
			sparkService.sendGamePay($scope.$root.game)
				.then(
					function(response) {
					},
					function(err) {
						console.error(err);
					}
				);
    	};
    	
    	$scope.$root.animStarted = function(animEvt) {
    		if (animEvt.animationName == "humanthrowrps") {
	    		if (!this._counter) {
	    			this._counter = 0;
	    		}
	    		if (animEvt.animationName == "humanthrowrps" && this._counter == 1) {
	        		$(".rps-countdown-row").parent().addClass("background-rock");
	    		}
	    		this._counter++;
    		}
    	};
    	$scope.$root.animIterated = function(animEvt) {
    		if (animEvt.animationName == "humanthrowrps") {
	    		if (this._counter == 5) {
	        		$(".rps-countdown-row").parent().addClass("background-paper");
	        		var hands = $(".rps-countdown img");
	        		hands.removeClass("rps-countdown-rock").addClass("rps-countdown-paper");
	        		if (hands[0].src.indexOf("Human") == -1) {
	        			hands[0].src = "/img/Hands_Robot_paper.png";
	        			hands[1].src = "/img/Hands_Human_paper.png";
	        		}
	        		else {
	        			hands[0].src = "/img/Hands_Human_paper.png";
	        			hands[1].src = "/img/Hands_Robot_paper.png";
	        		}
	    		}
	    		else if (this._counter == 8) {
	        		$(".rps-countdown-row").parent().addClass("background-scissors");
	        		var hands = $(".rps-countdown img");
	        		hands.removeClass("rps-countdown-paper").addClass("rps-countdown-scissors");
	        		if (hands[0].src.indexOf("Human") == -1) {
	        			hands[0].src = "/img/Hands_Robot_scissors.png";
	        			hands[1].src = "/img/Hands_Human_scissors.png";
	        		}
	        		else {
	        			hands[0].src = "/img/Hands_Human_scissors.png";
	        			hands[1].src = "/img/Hands_Robot_scissors.png";
	        		}
	    		}
	    		this._counter++;
    		}
    	};
    	$scope.$root.animEnded = function(animEvt) {
    		if (animEvt.animationName == "humanthrowrps") {
	    		this._counter = 0;
	    		this.shoot();
    		}
    	};
    	
    	
		window.addEventListener("webkitAnimationStart", $scope.$root.animStarted.bind($scope.$root));
		window.addEventListener("webkitAnimationIteration", $scope.$root.animIterated.bind($scope.$root));
		window.addEventListener("webkitAnimationEnd", $scope.$root.animEnded.bind($scope.$root));
		
		window.addEventListener("animationstart", $scope.$root.animStarted.bind($scope.$root));
		window.addEventListener("animationiteration", $scope.$root.animIterated.bind($scope.$root));
		window.addEventListener("animationend", $scope.$root.animEnded.bind($scope.$root));
	}
]);

rpsApp.filter('getWinner', function() {
	return function(winner) {
		var winnerString = "TIE";
		if (winner === "human") {
			winnerString = "YOU WIN";
		}
		else if (winner === "spark") {
			winnerString = "SPARK WINS";
		}
		return winnerString;
  }
});
